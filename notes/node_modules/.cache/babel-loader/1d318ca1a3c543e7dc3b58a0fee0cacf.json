{"ast":null,"code":"var _jsxFileName = \"/Users/iviswa948/React-Cart-JS-Project/notes/src/components/EditNote.js\";\nimport React, { useState, useContext, useRef, useEffect } from 'react';\nimport NotesContext from '../context';\n\nconst EditNote = () => {\n  const {\n    state,\n    dispatch\n  } = useContext(NotesContext);\n  const [value, setValue] = useState(state.currentNote.text); //initialState as String for useState so it s local state for Edit Comp\n\n  let ref = useRef();\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (value.trim() === '') {\n      alert('Cannot have blank Item');\n    } else {\n      dispatch({\n        type: 'UPDATE_NOTE',\n        payload: value\n      });\n      setValue('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: ref,\n    onChange: handleChange,\n    value: value,\n    name: \"\",\n    id: \"\",\n    cols: \"30\",\n    rows: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Update\"))));\n};\n\nexport default EditNote;","map":{"version":3,"sources":["/Users/iviswa948/React-Cart-JS-Project/notes/src/components/EditNote.js"],"names":["React","useState","useContext","useRef","useEffect","NotesContext","EditNote","state","dispatch","value","setValue","currentNote","text","ref","current","focus","handleChange","e","target","handleSubmit","preventDefault","trim","alert","type","payload","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,MAAtC,EAA8CC,SAA9C,QAA+D,OAA/D;AACA,OAAOC,YAAP,MAAyB,YAAzB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBN,UAAU,CAACG,YAAD,CAAtC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACM,KAAK,CAACI,WAAN,CAAkBC,IAAnB,CAAlC,CAFqB,CAEsC;;AAE3D,MAAIC,GAAG,GAAGV,MAAM,EAAhB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,GAAG,CAACC,OAAJ,CAAYC,KAAZ;AACD,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBP,IAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAAST,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMU,YAAY,GAAGF,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACG,cAAF;;AACA,QAAIX,KAAK,CAACY,IAAN,OAAiB,EAArB,EAAyB;AACvBC,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACD,KAFD,MAEO;AACLd,MAAAA,QAAQ,CAAC;AAAEe,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,OAAO,EAAEf;AAAhC,OAAD,CAAR;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAES,YAAhB;AAA8B,IAAA,MAAM,EAAC,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEN,GADP;AAEE,IAAA,QAAQ,EAAEG,YAFZ;AAGE,IAAA,KAAK,EAAEP,KAHT;AAIE,IAAA,IAAI,EAAC,EAJP;AAKE,IAAA,EAAE,EAAC,EALL;AAME,IAAA,IAAI,EAAC,IANP;AAOE,IAAA,IAAI,EAAC,IAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE;AAAK,IAAA,KAAK,EAAE;AAAEgB,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAVF,CADF,CADJ;AAkBD,CA1CD;;AA2CA,eAAenB,QAAf","sourcesContent":["import React, { useState, useContext, useRef, useEffect } from 'react';\nimport NotesContext from '../context';\n\nconst EditNote = () => {\n  const { state, dispatch } = useContext(NotesContext);\n  const [value, setValue] = useState(state.currentNote.text);//initialState as String for useState so it s local state for Edit Comp\n\n  let ref = useRef();\n\n  useEffect(() => {\n    ref.current.focus();\n  },[]);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (value.trim() === '') {\n      alert('Cannot have blank Item');\n    } else {\n      dispatch({ type: 'UPDATE_NOTE', payload: value });\n      setValue('');\n    }\n  };\n\n  return (\n      <div className='note-form'>\n        <form onSubmit={handleSubmit} action=''>\n          <textarea\n            ref={ref}\n            onChange={handleChange}\n            value={value}\n            name=''\n            id=''\n            cols='30'\n            rows='10'\n          />\n          <div style={{ textAlign: 'right' }}>\n            <button>Update</button>\n          </div>\n        </form>\n      </div>\n  );\n}\nexport default EditNote"]},"metadata":{},"sourceType":"module"}